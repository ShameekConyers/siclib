from typing import Callable, Optional

import numpy

def derivative_at_index(arg0: numpy.ndarray[numpy.float64], arg1: int) -> float: ...
def derivative_at_value(arg0: numpy.ndarray[numpy.float64], arg1: float) -> float: ...
def equation_solution(arg0: Callable[[float],float], arg1: float) -> Optional[float]: ...
def initial_value_problem(arg0: Callable[[float,numpy.ndarray[numpy.float64]],numpy.ndarray[numpy.float64]], arg1: numpy.ndarray[numpy.float64], arg2: float, arg3: float) -> numpy.ndarray[numpy.float64]: ...
def integral_index_interval(arg0: numpy.ndarray[numpy.float64], arg1: int, arg2: int) -> float: ...
